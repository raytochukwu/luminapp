{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\RAY\\\\Desktop\\\\luminapp\\\\src\\\\components\\\\Productionpg.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useQuery, gql } from \"@apollo/client\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FILMS_QUERY = gql`\n  {\n    launchesPast() {\n     image\n      title\n    }\n  }\n`;\nexport const Productionpg = () => {\n  _s();\n\n  const {\n    data,\n    loading,\n    error\n  } = useQuery(FILMS_QUERY);\n  console.log(data);\n  if (loading) return \"Loading...\";\n  if (error) return /*#__PURE__*/_jsxDEV(\"pre\", {\n    children: error.message\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 23\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"SpaceX Launches\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 14\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: data.launchesPast.map(launch => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: launch.title\n      }, launch.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Productionpg, \"tP+6C5plfRwxqCbBj3cMUcL7Opk=\", false, function () {\n  return [useQuery];\n});\n\n_c = Productionpg;\nexport default Productionpg;\n\nvar _c;\n\n$RefreshReg$(_c, \"Productionpg\");","map":{"version":3,"sources":["C:/Users/RAY/Desktop/luminapp/src/components/Productionpg.js"],"names":["React","useQuery","gql","FILMS_QUERY","Productionpg","data","loading","error","console","log","message","launchesPast","map","launch","title","id"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAkBC,GAAlB,QAA6B,gBAA7B;;AACA,MAAMC,WAAW,GAAGD,GAAI;AACxB;AACA;AACA;AACA;AACA;AACA;AACA,CAPA;AASA,OAAO,MAAME,YAAY,GAAG,MAAM;AAAA;;AAC9B,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,OAAR;AAAiBC,IAAAA;AAAjB,MAA2BN,QAAQ,CAACE,WAAD,CAAzC;AACAK,EAAAA,OAAO,CAACC,GAAR,CAAYJ,IAAZ;AAEA,MAAIC,OAAJ,EAAa,OAAO,YAAP;AACb,MAAIC,KAAJ,EAAW,oBAAO;AAAA,cAAMA,KAAK,CAACG;AAAZ;AAAA;AAAA;AAAA;AAAA,UAAP;AACX,sBACI;AAAA,4BACK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADL,eAEF;AAAA,gBACGL,IAAI,CAACM,YAAL,CAAkBC,GAAlB,CAAuBC,MAAD,iBACrB;AAAA,kBAAqBA,MAAM,CAACC;AAA5B,SAASD,MAAM,CAACE,EAAhB;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA,YAFE;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAWH,CAjBM;;GAAMX,Y;UACwBH,Q;;;KADxBG,Y;AAkBb,eAAeA,YAAf","sourcesContent":["import React from 'react'\r\nimport { useQuery,gql } from \"@apollo/client\";\r\nconst FILMS_QUERY = gql`\r\n  {\r\n    launchesPast() {\r\n     image\r\n      title\r\n    }\r\n  }\r\n`;\r\n\r\nexport const Productionpg = () => {\r\n    const { data, loading, error } = useQuery(FILMS_QUERY);\r\n    console.log(data);\r\n\r\n    if (loading) return \"Loading...\";\r\n    if (error) return <pre>{error.message}</pre>\r\n    return (\r\n        <div>\r\n             <h1>SpaceX Launches</h1>\r\n      <ul>\r\n        {data.launchesPast.map((launch) => (\r\n          <li key={launch.id}>{launch.title}</li>\r\n        ))}\r\n      </ul>\r\n          \r\n        </div>\r\n    )\r\n}\r\nexport default Productionpg;"]},"metadata":{},"sourceType":"module"}